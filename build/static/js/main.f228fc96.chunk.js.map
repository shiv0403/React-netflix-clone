{"version":3,"sources":["Components/axios/axios.js","Components/Rows/Row.js","Components/axios/request.js","Components/Navbar/Navbar.js","Components/Banner/Banner.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerURL","setTrailerURL","useEffect","a","get","request","console","log","data","results","fetchData","className","toUpperCase","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","err","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomantic","fetchDocumentaries","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","Banner","setMovie","requests","Math","floor","random","length","style","backgroundSize","backgroundImage","original_name","overview","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f228fc96.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\n// instance.get(\"/foo-bar\", () => {});\n\nexport default instance;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios/axios\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchURL, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerURL, setTrailerURL] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerURL) {\n      setTrailerURL(\"\");\n    } else {\n      movieTrailer(movie?.name || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerURL(urlParams.get(\"v\"));\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      {/* title */}\n      <h2>{title.toUpperCase()}</h2>\n\n      {/* container posters */}\n      <div className=\"row_posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n            />\n          );\n        })}\n      </div>\n\n      {trailerURL && <Youtube videoId={trailerURL} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"22e5453d0fbae9b5231eff46030ced91\";\n\nconst request = {\n  fetchTrending: `trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomantic: `discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default request;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else {\n        handleShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQytOcSa454o6fDSsbn-OTF98y0qFXuz8BWhQ&usqp=CAU\"\n        alt=\"netflix-logo\"\n      />\n\n      <img\n        className=\"nav_avatar\"\n        src=\"https://www.pngkit.com/png/full/796-7963534_individuals-person-icon-circle-png.png\"\n        alt=\"nav_icon\"\n      />\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios/axios\";\nimport requests from \"../axios/request\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n\n    fetchData();\n  }, []);\n\n  function truncate(input, N) {\n    if (input.length > N) {\n      return input.substring(0, N - 1) + \"...\";\n    } else {\n      return input;\n    }\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n      }}\n    >\n      <div className=\"banner_content\">\n        {/* title */}\n        <h1 className=\"banner_title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        {/* div 2 buttons */}\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n        {/* description */}\n        <h1 className=\"banner_description\">{movie?.overview}</h1>\n      </div>\n      <div className=\"banner_fadebottom\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\nimport Row from \"../Rows/Row\";\nimport requests from \"../axios/request\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Banner from \"../Banner/Banner\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        fetchURL={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n      />\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} />\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} />\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\n      <Row title=\"Comedy Moves\" fetchURL={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomantic} />\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}