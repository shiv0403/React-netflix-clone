{"ast":null,"code":"import _regeneratorRuntime from\"/home/shivansh/Desktop/React-Practice/netflix-clone/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/shivansh/Desktop/React-Practice/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/shivansh/Desktop/React-Practice/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import axios from\"../axios/axios\";import Youtube from\"react-youtube\";import movieTrailer from\"movie-trailer\";import\"./Row.css\";var base_url=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchURL=_ref.fetchURL,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerURL=_useState4[0],setTrailerURL=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchURL);case 2:request=_context.sent;console.log(request);setMovies(request.data.results);return _context.abrupt(\"return\",request);case 6:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchURL]);var opts={height:\"390\",width:\"100%\",playerVars:{autoplay:1}};var handleClick=function handleClick(movie){if(trailerURL){setTrailerURL(\"\");}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerURL(urlParams.get(\"v\"));}).catch(function(err){return console.log(err);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title.toUpperCase()}),/*#__PURE__*/_jsx(\"div\",{className:\"row_posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name,className:\"row_poster \".concat(isLargeRow&&\"row_posterLarge\")},movie.id);})}),trailerURL&&/*#__PURE__*/_jsx(Youtube,{videoId:trailerURL,opts:opts})]});}export default Row;","map":{"version":3,"sources":["/home/shivansh/Desktop/React-Practice/netflix-clone/src/Components/Rows/Row.js"],"names":["React","useState","useEffect","axios","Youtube","movieTrailer","base_url","Row","title","fetchURL","isLargeRow","movies","setMovies","trailerURL","setTrailerURL","fetchData","get","request","console","log","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","err","toUpperCase","map","poster_path","backdrop_path","id"],"mappings":"ueAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA,MAAO,WAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CAEA,QAASC,CAAAA,GAAT,MAA8C,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,eAChBT,QAAQ,CAAC,EAAD,CADQ,wCACrCU,MADqC,eAC7BC,SAD6B,8BAERX,QAAQ,CAAC,EAAD,CAFA,yCAErCY,UAFqC,eAEzBC,aAFyB,eAI5CZ,SAAS,CAAC,UAAM,SACCa,CAAAA,SADD,qIACd,qKACwBZ,CAAAA,KAAK,CAACa,GAAN,CAAUP,QAAV,CADxB,QACQQ,OADR,eAEEC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACAL,SAAS,CAACK,OAAO,CAACG,IAAR,CAAaC,OAAd,CAAT,CAHF,gCAISJ,OAJT,wDADc,4CAOdF,SAAS,GACV,CARQ,CAQN,CAACN,QAAD,CARM,CAAT,CAUA,GAAMa,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,KADG,CAEXC,KAAK,CAAE,MAFI,CAGXC,UAAU,CAAE,CACVC,QAAQ,CAAE,CADA,CAHD,CAAb,CAQA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAIf,UAAJ,CAAgB,CACdC,aAAa,CAAC,EAAD,CAAb,CACD,CAFD,IAEO,CACLT,YAAY,CAAC,CAAAuB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEC,IAAP,GAAe,EAAhB,CAAZ,CACGC,IADH,CACQ,SAACC,GAAD,CAAS,CACb,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB,CACArB,aAAa,CAACkB,SAAS,CAAChB,GAAV,CAAc,GAAd,CAAD,CAAb,CACD,CAJH,EAKGoB,KALH,CAKS,SAACC,GAAD,QAASnB,CAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ,CAAT,EALT,EAMD,CACF,CAXD,CAaA,mBACE,aAAK,SAAS,CAAC,KAAf,wBAEE,oBAAK7B,KAAK,CAAC8B,WAAN,EAAL,EAFF,cAKE,YAAK,SAAS,CAAC,aAAf,UACG3B,MAAM,CAAC4B,GAAP,CAAW,SAACX,KAAD,CAAW,CACrB,mBACE,YAEE,OAAO,CAAE,yBAAMD,CAAAA,WAAW,CAACC,KAAD,CAAjB,EAFX,CAGE,GAAG,WAAKtB,QAAL,SACDI,UAAU,CAAGkB,KAAK,CAACY,WAAT,CAAuBZ,KAAK,CAACa,aADtC,CAHL,CAME,GAAG,CAAEb,KAAK,CAACC,IANb,CAOE,SAAS,sBAAgBnB,UAAU,EAAI,iBAA9B,CAPX,EACOkB,KAAK,CAACc,EADb,CADF,CAWD,CAZA,CADH,EALF,CAqBG7B,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,UAAlB,CAA8B,IAAI,CAAES,IAApC,EArBjB,GADF,CAyBD,CAED,cAAef,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios/axios\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchURL, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerURL, setTrailerURL] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerURL) {\n      setTrailerURL(\"\");\n    } else {\n      movieTrailer(movie?.name || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerURL(urlParams.get(\"v\"));\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      {/* title */}\n      <h2>{title.toUpperCase()}</h2>\n\n      {/* container posters */}\n      <div className=\"row_posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n            />\n          );\n        })}\n      </div>\n\n      {trailerURL && <Youtube videoId={trailerURL} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}